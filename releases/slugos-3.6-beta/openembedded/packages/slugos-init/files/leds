#!/bin/sh
# leds
# Generic script to control the leds in /sys/class/leds
# (c) Oyvind Repvik 2006
# Licence: GPL
#set -x
#
# configuration
#
LEDPATH="/sys/class/leds"

#
# Give help output when no 
#

show_help() {
	echo "Usage: leds <ledname> <command> [<parameters>]"
	echo ""
	echo "Available leds are: "
	echo -n "	"
	echo `for a in $LEDPATH/*; do echo -n $a|cut -d "/" -f 5 ; done`
	# ugly hack
	for a in $LEDPATH/*; do TMPVAR=`echo -n $a|cut -d "/" -f 5` ; done
	echo ""
	echo "The commands are:"
	echo "	on "
	echo "	off "
	echo "	<trigger> "
	echo ""
	echo "Available triggers are: "
	echo -n "	"
	echo `cat $LEDPATH/$TMPVAR/trigger|sed s:\\\[::|sed s:\\\]::|sed s:"cpu":"cpu-idle cpu-busy":`
	echo ""
	echo "none, ide-disk and nand-disk take no further arguments"
	echo "cpu-idle takes either on, off or flash"
	echo "cpu-busy takes either on, off or flash"
	echo "timer takes both 'duty' and 'frequency'"
	echo
	exit 1
}


# Make sure that the led specified exists

check_led() 
{
	if [ -d $LEDPATH/$1 ] ;
	then 
		return 0;
	else
		return 1;
	fi
}

# Switch off the led
led_off()
{
	echo "none" > $LEDPATH/$LEDNAME/trigger
	echo -n 0 > $LEDPATH/$LEDNAME/brightness
}

# Switch on the led
led_on()
{
	echo "none" > $LEDPATH/$LEDNAME/trigger
	echo -n 1 > $LEDPATH/$LEDNAME/brightness
}

led_ide()
{
	echo "ide-disk" > $LEDPATH/$LEDNAME/trigger
	echo -n 1 > $LEDPATH/$LEDNAME/brightness
}

led_nand()
{
	echo "nand-disk" > $LEDPATH/$LEDNAME/trigger
	echo -n 1 > $LEDPATH/$LEDNAME/brightness
}

led_none()
{
	led_on
}

led_timer()
{
	if [ $1 -gt 0 -o $2 -gt 0 ] ; then
		echo "timer" > $LEDPATH/$LEDNAME/trigger
		echo -n 1 > $LEDPATH/$LEDNAME/brightness
		echo -n $2 > $LEDPATH/$LEDNAME/frequency
		echo -n $1 > $LEDPATH/$LEDNAME/duty
	else
		echo "Expected two integer values greater than 0"
		exit
	fi
}

led_cpuidle()
{
	if [ "$1" = "on" -o "$1" = "off" -o "$1" = "flash" ] ; then
		echo "cpu" > $LEDPATH/$LEDNAME/trigger
		echo "$1" > $LEDPATH/$LEDNAME/idle
		case "$1" in
			on) echo "off" > $LEDPATH/$LEDNAME/active ;;
			off)echo "on" > $LEDPATH/$LEDNAME/active ;;
			flash)echo "off" > $LEDPATH/$LEDNAME/active ;;
		esac
		echo -n 1 > $LEDPATH/$LEDNAME/brightness
	else
		echo "Invalid function. cpu-idle accepts either 'on', 'off' or 'flash'"
		exit 1
	fi
}

led_cpubusy()
{
	if [ "$1" = "on" -o "$1" = "off" -o "$1" = "flash" ] ; then
		echo "cpu" > $LEDPATH/$LEDNAME/trigger
		echo "$1" > $LEDPATH/$LEDNAME/active
		case "$1" in
			on) echo "off" > $LEDPATH/$LEDNAME/idle ;;
			off)echo "on" > $LEDPATH/$LEDNAME/idle ;;
			flash)echo "off" > $LEDPATH/$LEDNAME/idle ;;
		esac
		echo -n 1 > $LEDPATH/$LEDNAME/brightness
	else
		echo "Invalid function. cpu-idle accepts either 'on', 'off' or 'flash'"
		exit 1
	fi                                               
}

# Basic check for other parameters than led name.

case "$1" in
help)	show_help
	;;
*)	if check_led "$1"
		then LEDNAME="$1"
	else
		echo "Invalid led name. Try 'leds help'"
		exit 1
	fi
	;;
esac	

# Figure out which command we've been passed

case "$2" in
off)		led_off 
		;;
on)		led_on 
		;;
ide-disk)	led_ide 
		;;
nand-disk)	led_nand 
		;;
timer)		led_timer "$3" "$4"
		;;
cpu-idle)	led_cpuidle "$3"
		;;
cpu-busy)	led_cpubusy "$3"
		;;
none)		led_none
		;;
*)		echo "Invalid command. Try 'leds help' to see available led commands"
		;;
esac
